v==============Cycle Counter =     0==============v

[IF ]: Instruction [00000433]@[00001000]: add	x8, x0, x0
[ID ]: Instruction [00000000]@[00000000]: 
[EX ]: Instruction [00000000]@[00000000]: 
[MEM]: Instruction [00000000]@[00000000]: 
[WB ]: Instruction [00000000]@[00000000]: 
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=00000000 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=00000000 r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =     1==============v

[IF ]: Instruction [000004b3]@[00001004]: add	x9, x0, x0
[ID ]: Instruction [00000433]@[00001000]: add	x8, x0, x0
[EX ]: Instruction [00000000]@[00000000]: 
[MEM]: Instruction [00000000]@[00000000]: 
[WB ]: Instruction [00000000]@[00000000]: 
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=00000000 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=00000000 r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =     2==============v

[IF ]: Instruction [40000933]@[00001008]: sub	x18, x0, x0
[ID ]: Instruction [000004b3]@[00001004]: add	x9, x0, x0
[EX DEBUG] Instruction [0x00000433] → rs1: x0 = 0x00000000, rs2: x0 = 0x00000000 → result: 0x00000000
[EX ]: Instruction [00000433]@[00001000]: add	x8, x0, x0
[MEM]: Instruction [00000000]@[00000000]: 
[WB ]: Instruction [00000000]@[00000000]: 
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=00000000 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=00000000 r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =     3==============v

[IF ]: Instruction [00e40413]@[0000100c]: addi	x8, x8, 14
[ID ]: Instruction [40000933]@[00001008]: sub	x18, x0, x0
[EX DEBUG] Instruction [0x000004b3] → rs1: x0 = 0x00000000, rs2: x0 = 0x00000000 → result: 0x00000000
[EX ]: Instruction [000004b3]@[00001004]: add	x9, x0, x0
[MEM]: Instruction [00000433]@[00001000]: add	x8, x0, x0
[WB ]: Instruction [00000000]@[00000000]: 
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=00000000 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=00000000 r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =     4==============v

[IF ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[ID ]: Instruction [00e40413]@[0000100c]: addi	x8, x8, 14
[EX DEBUG] Instruction [0x40000933] → rs1: x0 = 0x00000000, rs2: x0 = 0x00000000 → result: 0x00000000
[EX ]: Instruction [40000933]@[00001008]: sub	x18, x0, x0
[MEM]: Instruction [000004b3]@[00001004]: add	x9, x0, x0
[WB ]: Instruction [00000433]@[00001000] → Writing x8 ← 0x00000000 (alu_result)
[WB ]: Instruction [00000433]@[00001000]: add	x8, x0, x0
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=00000000 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=00000000 r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =     5==============v

[IF ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[ID ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[EX DEBUG] Instruction [0x00e40413] → rs1: x8 = 0x00000000, rs2: x14 = 0x0000000e → result: 0x0000000e
[EX ]: Instruction [00e40413]@[0000100c]: addi	x8, x8, 14
[MEM]: Instruction [40000933]@[00001008]: sub	x18, x0, x0
[WB ]: Instruction [000004b3]@[00001004] → Writing x9 ← 0x00000000 (alu_result)
[WB ]: Instruction [000004b3]@[00001004]: add	x9, x0, x0
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=00000000 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=00000000 r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =     6==============v

[IF ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[ID ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[EX DEBUG] Instruction [0x01b48493] → rs1: x9 = 0x00000000, rs2: x27 = 0x0000001b → result: 0x0000001b
[EX ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[MEM]: Instruction [00e40413]@[0000100c]: addi	x8, x8, 14
[WB ]: Instruction [40000933]@[00001008] → Writing x18 ← 0x00000000 (alu_result)
[WB ]: Instruction [40000933]@[00001008]: sub	x18, x0, x0
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=00000000 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=00000000 r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =     7==============v

[IF ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[ID ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[FWD]: Resolving MEM hazard on rs1: x8
[EX DEBUG] Instruction [0x00040a63] → rs1: x8 = 0x00000000, rs2: x0 = 0x00000014 → result: 0xffffffec
[EX ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[MEM]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[WB ]: Instruction [00e40413]@[0000100c] → Writing x8 ← 0x0000000e (alu_result)
[WB ]: Instruction [00e40413]@[0000100c]: addi	x8, x8, 14
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000e r 9=00000000 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=00000000 r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =     8==============v

[IF ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[ID ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[FWD]: Resolving MEM hazard on rs2: x9
[EX DEBUG] Instruction [0x00990933] → rs1: x18 = 0x00000000, rs2: x9 = 0x0000000e → result: 0x0000000e
[EX ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[MEM]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[WB ]: Instruction [01b48493]@[00001010] → Writing x9 ← 0x0000001b (alu_result)
[WB ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000e r 9=0000001b r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=00000000 r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =     9==============v

[IF ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[ID ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[EX DEBUG] Instruction [0xfff40413] → rs1: x8 = 0x0000000e, rs2: x31 = 0xffffffff → result: 0x0000000d
[EX ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[MEM]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[WB ]: Instruction [00040a63]@[00001014] → Writing x0 ← 0xffffffec (alu_result)
[WB ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000e r 9=0000001b r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=00000000 r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    10==============v

[IF ]: Instruction [ffc10113]@[00001028]: addi	x2, x2, -4
[ID ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[EX DEBUG] Instruction [0xff1ff06f] → rs1: x31 = 0x00000000, rs2: x17 = 0xfffffff0 → result: 0xfffffff0
[EX ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[MEM]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[WB ]: Instruction [00990933]@[00001018] → Writing x18 ← 0x0000000e (alu_result)
[WB ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000e r 9=0000001b r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    11==============v

[IF ]: Instruction [01312023]@[0000102c]: sw	x19, 0(x2)
[ID ]: Instruction [ffc10113]@[00001028]: addi	x2, x2, -4
[EX DEBUG] Instruction [0x00100993] → rs1: x0 = 0x00000000, rs2: x1 = 0x00000001 → result: 0x00000001
[EX ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[MEM]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[WB ]: Instruction [fff40413]@[0000101c] → Writing x8 ← 0x0000000d (alu_result)
[WB ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[CPL]: Pipeline Flushed
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000d r 9=0000001b r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    12==============v

[IF ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[ID ]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x000effff, rs2: x0 = 0xfffffffc → result: 0x000efffb
[EX ]: Instruction [00000013]@[00001028]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[00001024]: addi	x0, x0, 0
[WB ]: Instruction [ff1ff06f]@[00001020] → Writing x0 ← 0x00001024 (alu_result)
[WB ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000d r 9=0000001b r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    13==============v

[IF ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[ID ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x00000000, rs2: x0 = 0x00000000 → result: 0x00000000
[EX ]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[00001028]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000d r 9=0000001b r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    14==============v

[IF ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[ID ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[EX DEBUG] Instruction [0x01b48493] → rs1: x9 = 0x0000001b, rs2: x27 = 0x0000001b → result: 0x00000036
[EX ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[MEM]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000d r 9=0000001b r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    15==============v

[IF ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[ID ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[EX DEBUG] Instruction [0x00040a63] → rs1: x8 = 0x0000000d, rs2: x0 = 0x00000014 → result: 0xfffffff9
[EX ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[MEM]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000d r 9=0000001b r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    16==============v

[IF ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[ID ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[FWD]: Resolving MEM hazard on rs2: x9
[EX DEBUG] Instruction [0x00990933] → rs1: x18 = 0x0000000e, rs2: x9 = 0x00000000 → result: 0x0000000e
[EX ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[MEM]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[WB ]: Instruction [01b48493]@[00001010] → Writing x9 ← 0x00000036 (alu_result)
[WB ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000d r 9=00000036 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    17==============v

[IF ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[ID ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[EX DEBUG] Instruction [0xfff40413] → rs1: x8 = 0x0000000d, rs2: x31 = 0xffffffff → result: 0x0000000c
[EX ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[MEM]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[WB ]: Instruction [00040a63]@[00001014] → Writing x0 ← 0xfffffff9 (alu_result)
[WB ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000d r 9=00000036 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    18==============v

[IF ]: Instruction [ffc10113]@[00001028]: addi	x2, x2, -4
[ID ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[EX DEBUG] Instruction [0xff1ff06f] → rs1: x31 = 0x00000000, rs2: x17 = 0xfffffff0 → result: 0xfffffff0
[EX ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[MEM]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[WB ]: Instruction [00990933]@[00001018] → Writing x18 ← 0x0000000e (alu_result)
[WB ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000d r 9=00000036 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    19==============v

[IF ]: Instruction [01312023]@[0000102c]: sw	x19, 0(x2)
[ID ]: Instruction [ffc10113]@[00001028]: addi	x2, x2, -4
[EX DEBUG] Instruction [0x00100993] → rs1: x0 = 0x00000000, rs2: x1 = 0x00000001 → result: 0x00000001
[EX ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[MEM]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[WB ]: Instruction [fff40413]@[0000101c] → Writing x8 ← 0x0000000c (alu_result)
[WB ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[CPL]: Pipeline Flushed
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000c r 9=00000036 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    20==============v

[IF ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[ID ]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x000effff, rs2: x0 = 0xfffffffc → result: 0x000efffb
[EX ]: Instruction [00000013]@[00001028]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[00001024]: addi	x0, x0, 0
[WB ]: Instruction [ff1ff06f]@[00001020] → Writing x0 ← 0x00001024 (alu_result)
[WB ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000c r 9=00000036 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    21==============v

[IF ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[ID ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x00000000, rs2: x0 = 0x00000000 → result: 0x00000000
[EX ]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[00001028]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000c r 9=00000036 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    22==============v

[IF ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[ID ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[EX DEBUG] Instruction [0x01b48493] → rs1: x9 = 0x00000036, rs2: x27 = 0x0000001b → result: 0x00000051
[EX ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[MEM]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000c r 9=00000036 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    23==============v

[IF ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[ID ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[EX DEBUG] Instruction [0x00040a63] → rs1: x8 = 0x0000000c, rs2: x0 = 0x00000014 → result: 0xfffffff8
[EX ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[MEM]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000c r 9=00000036 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    24==============v

[IF ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[ID ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[FWD]: Resolving MEM hazard on rs2: x9
[EX DEBUG] Instruction [0x00990933] → rs1: x18 = 0x0000000e, rs2: x9 = 0x00000000 → result: 0x0000000e
[EX ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[MEM]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[WB ]: Instruction [01b48493]@[00001010] → Writing x9 ← 0x00000051 (alu_result)
[WB ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000c r 9=00000051 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    25==============v

[IF ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[ID ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[EX DEBUG] Instruction [0xfff40413] → rs1: x8 = 0x0000000c, rs2: x31 = 0xffffffff → result: 0x0000000b
[EX ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[MEM]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[WB ]: Instruction [00040a63]@[00001014] → Writing x0 ← 0xfffffff8 (alu_result)
[WB ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000c r 9=00000051 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    26==============v

[IF ]: Instruction [ffc10113]@[00001028]: addi	x2, x2, -4
[ID ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[EX DEBUG] Instruction [0xff1ff06f] → rs1: x31 = 0x00000000, rs2: x17 = 0xfffffff0 → result: 0xfffffff0
[EX ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[MEM]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[WB ]: Instruction [00990933]@[00001018] → Writing x18 ← 0x0000000e (alu_result)
[WB ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000c r 9=00000051 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    27==============v

[IF ]: Instruction [01312023]@[0000102c]: sw	x19, 0(x2)
[ID ]: Instruction [ffc10113]@[00001028]: addi	x2, x2, -4
[EX DEBUG] Instruction [0x00100993] → rs1: x0 = 0x00000000, rs2: x1 = 0x00000001 → result: 0x00000001
[EX ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[MEM]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[WB ]: Instruction [fff40413]@[0000101c] → Writing x8 ← 0x0000000b (alu_result)
[WB ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[CPL]: Pipeline Flushed
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000b r 9=00000051 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    28==============v

[IF ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[ID ]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x000effff, rs2: x0 = 0xfffffffc → result: 0x000efffb
[EX ]: Instruction [00000013]@[00001028]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[00001024]: addi	x0, x0, 0
[WB ]: Instruction [ff1ff06f]@[00001020] → Writing x0 ← 0x00001024 (alu_result)
[WB ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000b r 9=00000051 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    29==============v

[IF ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[ID ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x00000000, rs2: x0 = 0x00000000 → result: 0x00000000
[EX ]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[00001028]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000b r 9=00000051 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    30==============v

[IF ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[ID ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[EX DEBUG] Instruction [0x01b48493] → rs1: x9 = 0x00000051, rs2: x27 = 0x0000001b → result: 0x0000006c
[EX ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[MEM]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000b r 9=00000051 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    31==============v

[IF ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[ID ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[EX DEBUG] Instruction [0x00040a63] → rs1: x8 = 0x0000000b, rs2: x0 = 0x00000014 → result: 0xfffffff7
[EX ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[MEM]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000b r 9=00000051 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    32==============v

[IF ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[ID ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[FWD]: Resolving MEM hazard on rs2: x9
[EX DEBUG] Instruction [0x00990933] → rs1: x18 = 0x0000000e, rs2: x9 = 0x00000000 → result: 0x0000000e
[EX ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[MEM]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[WB ]: Instruction [01b48493]@[00001010] → Writing x9 ← 0x0000006c (alu_result)
[WB ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000b r 9=0000006c r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    33==============v

[IF ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[ID ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[EX DEBUG] Instruction [0xfff40413] → rs1: x8 = 0x0000000b, rs2: x31 = 0xffffffff → result: 0x0000000a
[EX ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[MEM]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[WB ]: Instruction [00040a63]@[00001014] → Writing x0 ← 0xfffffff7 (alu_result)
[WB ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000b r 9=0000006c r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    34==============v

[IF ]: Instruction [ffc10113]@[00001028]: addi	x2, x2, -4
[ID ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[EX DEBUG] Instruction [0xff1ff06f] → rs1: x31 = 0x00000000, rs2: x17 = 0xfffffff0 → result: 0xfffffff0
[EX ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[MEM]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[WB ]: Instruction [00990933]@[00001018] → Writing x18 ← 0x0000000e (alu_result)
[WB ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000b r 9=0000006c r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    35==============v

[IF ]: Instruction [01312023]@[0000102c]: sw	x19, 0(x2)
[ID ]: Instruction [ffc10113]@[00001028]: addi	x2, x2, -4
[EX DEBUG] Instruction [0x00100993] → rs1: x0 = 0x00000000, rs2: x1 = 0x00000001 → result: 0x00000001
[EX ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[MEM]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[WB ]: Instruction [fff40413]@[0000101c] → Writing x8 ← 0x0000000a (alu_result)
[WB ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[CPL]: Pipeline Flushed
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000a r 9=0000006c r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    36==============v

[IF ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[ID ]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x000effff, rs2: x0 = 0xfffffffc → result: 0x000efffb
[EX ]: Instruction [00000013]@[00001028]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[00001024]: addi	x0, x0, 0
[WB ]: Instruction [ff1ff06f]@[00001020] → Writing x0 ← 0x00001024 (alu_result)
[WB ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000a r 9=0000006c r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    37==============v

[IF ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[ID ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x00000000, rs2: x0 = 0x00000000 → result: 0x00000000
[EX ]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[00001028]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000a r 9=0000006c r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    38==============v

[IF ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[ID ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[EX DEBUG] Instruction [0x01b48493] → rs1: x9 = 0x0000006c, rs2: x27 = 0x0000001b → result: 0x00000087
[EX ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[MEM]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000a r 9=0000006c r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    39==============v

[IF ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[ID ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[EX DEBUG] Instruction [0x00040a63] → rs1: x8 = 0x0000000a, rs2: x0 = 0x00000014 → result: 0xfffffff6
[EX ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[MEM]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000a r 9=0000006c r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    40==============v

[IF ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[ID ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[FWD]: Resolving MEM hazard on rs2: x9
[EX DEBUG] Instruction [0x00990933] → rs1: x18 = 0x0000000e, rs2: x9 = 0x00000000 → result: 0x0000000e
[EX ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[MEM]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[WB ]: Instruction [01b48493]@[00001010] → Writing x9 ← 0x00000087 (alu_result)
[WB ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000a r 9=00000087 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    41==============v

[IF ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[ID ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[EX DEBUG] Instruction [0xfff40413] → rs1: x8 = 0x0000000a, rs2: x31 = 0xffffffff → result: 0x00000009
[EX ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[MEM]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[WB ]: Instruction [00040a63]@[00001014] → Writing x0 ← 0xfffffff6 (alu_result)
[WB ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000a r 9=00000087 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    42==============v

[IF ]: Instruction [ffc10113]@[00001028]: addi	x2, x2, -4
[ID ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[EX DEBUG] Instruction [0xff1ff06f] → rs1: x31 = 0x00000000, rs2: x17 = 0xfffffff0 → result: 0xfffffff0
[EX ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[MEM]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[WB ]: Instruction [00990933]@[00001018] → Writing x18 ← 0x0000000e (alu_result)
[WB ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=0000000a r 9=00000087 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    43==============v

[IF ]: Instruction [01312023]@[0000102c]: sw	x19, 0(x2)
[ID ]: Instruction [ffc10113]@[00001028]: addi	x2, x2, -4
[EX DEBUG] Instruction [0x00100993] → rs1: x0 = 0x00000000, rs2: x1 = 0x00000001 → result: 0x00000001
[EX ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[MEM]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[WB ]: Instruction [fff40413]@[0000101c] → Writing x8 ← 0x00000009 (alu_result)
[WB ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[CPL]: Pipeline Flushed
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000009 r 9=00000087 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    44==============v

[IF ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[ID ]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x000effff, rs2: x0 = 0xfffffffc → result: 0x000efffb
[EX ]: Instruction [00000013]@[00001028]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[00001024]: addi	x0, x0, 0
[WB ]: Instruction [ff1ff06f]@[00001020] → Writing x0 ← 0x00001024 (alu_result)
[WB ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000009 r 9=00000087 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    45==============v

[IF ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[ID ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x00000000, rs2: x0 = 0x00000000 → result: 0x00000000
[EX ]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[00001028]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000009 r 9=00000087 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    46==============v

[IF ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[ID ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[EX DEBUG] Instruction [0x01b48493] → rs1: x9 = 0x00000087, rs2: x27 = 0x0000001b → result: 0x000000a2
[EX ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[MEM]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000009 r 9=00000087 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    47==============v

[IF ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[ID ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[EX DEBUG] Instruction [0x00040a63] → rs1: x8 = 0x00000009, rs2: x0 = 0x00000014 → result: 0xfffffff5
[EX ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[MEM]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000009 r 9=00000087 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    48==============v

[IF ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[ID ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[FWD]: Resolving MEM hazard on rs2: x9
[EX DEBUG] Instruction [0x00990933] → rs1: x18 = 0x0000000e, rs2: x9 = 0x00000000 → result: 0x0000000e
[EX ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[MEM]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[WB ]: Instruction [01b48493]@[00001010] → Writing x9 ← 0x000000a2 (alu_result)
[WB ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000009 r 9=000000a2 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    49==============v

[IF ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[ID ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[EX DEBUG] Instruction [0xfff40413] → rs1: x8 = 0x00000009, rs2: x31 = 0xffffffff → result: 0x00000008
[EX ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[MEM]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[WB ]: Instruction [00040a63]@[00001014] → Writing x0 ← 0xfffffff5 (alu_result)
[WB ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000009 r 9=000000a2 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    50==============v

[IF ]: Instruction [ffc10113]@[00001028]: addi	x2, x2, -4
[ID ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[EX DEBUG] Instruction [0xff1ff06f] → rs1: x31 = 0x00000000, rs2: x17 = 0xfffffff0 → result: 0xfffffff0
[EX ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[MEM]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[WB ]: Instruction [00990933]@[00001018] → Writing x18 ← 0x0000000e (alu_result)
[WB ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000009 r 9=000000a2 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    51==============v

[IF ]: Instruction [01312023]@[0000102c]: sw	x19, 0(x2)
[ID ]: Instruction [ffc10113]@[00001028]: addi	x2, x2, -4
[EX DEBUG] Instruction [0x00100993] → rs1: x0 = 0x00000000, rs2: x1 = 0x00000001 → result: 0x00000001
[EX ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[MEM]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[WB ]: Instruction [fff40413]@[0000101c] → Writing x8 ← 0x00000008 (alu_result)
[WB ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[CPL]: Pipeline Flushed
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000008 r 9=000000a2 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    52==============v

[IF ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[ID ]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x000effff, rs2: x0 = 0xfffffffc → result: 0x000efffb
[EX ]: Instruction [00000013]@[00001028]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[00001024]: addi	x0, x0, 0
[WB ]: Instruction [ff1ff06f]@[00001020] → Writing x0 ← 0x00001024 (alu_result)
[WB ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000008 r 9=000000a2 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    53==============v

[IF ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[ID ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x00000000, rs2: x0 = 0x00000000 → result: 0x00000000
[EX ]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[00001028]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000008 r 9=000000a2 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    54==============v

[IF ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[ID ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[EX DEBUG] Instruction [0x01b48493] → rs1: x9 = 0x000000a2, rs2: x27 = 0x0000001b → result: 0x000000bd
[EX ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[MEM]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000008 r 9=000000a2 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    55==============v

[IF ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[ID ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[EX DEBUG] Instruction [0x00040a63] → rs1: x8 = 0x00000008, rs2: x0 = 0x00000014 → result: 0xfffffff4
[EX ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[MEM]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000008 r 9=000000a2 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    56==============v

[IF ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[ID ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[FWD]: Resolving MEM hazard on rs2: x9
[EX DEBUG] Instruction [0x00990933] → rs1: x18 = 0x0000000e, rs2: x9 = 0x00000000 → result: 0x0000000e
[EX ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[MEM]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[WB ]: Instruction [01b48493]@[00001010] → Writing x9 ← 0x000000bd (alu_result)
[WB ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000008 r 9=000000bd r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    57==============v

[IF ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[ID ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[EX DEBUG] Instruction [0xfff40413] → rs1: x8 = 0x00000008, rs2: x31 = 0xffffffff → result: 0x00000007
[EX ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[MEM]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[WB ]: Instruction [00040a63]@[00001014] → Writing x0 ← 0xfffffff4 (alu_result)
[WB ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000008 r 9=000000bd r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    58==============v

[IF ]: Instruction [ffc10113]@[00001028]: addi	x2, x2, -4
[ID ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[EX DEBUG] Instruction [0xff1ff06f] → rs1: x31 = 0x00000000, rs2: x17 = 0xfffffff0 → result: 0xfffffff0
[EX ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[MEM]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[WB ]: Instruction [00990933]@[00001018] → Writing x18 ← 0x0000000e (alu_result)
[WB ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000008 r 9=000000bd r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    59==============v

[IF ]: Instruction [01312023]@[0000102c]: sw	x19, 0(x2)
[ID ]: Instruction [ffc10113]@[00001028]: addi	x2, x2, -4
[EX DEBUG] Instruction [0x00100993] → rs1: x0 = 0x00000000, rs2: x1 = 0x00000001 → result: 0x00000001
[EX ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[MEM]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[WB ]: Instruction [fff40413]@[0000101c] → Writing x8 ← 0x00000007 (alu_result)
[WB ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[CPL]: Pipeline Flushed
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000007 r 9=000000bd r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    60==============v

[IF ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[ID ]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x000effff, rs2: x0 = 0xfffffffc → result: 0x000efffb
[EX ]: Instruction [00000013]@[00001028]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[00001024]: addi	x0, x0, 0
[WB ]: Instruction [ff1ff06f]@[00001020] → Writing x0 ← 0x00001024 (alu_result)
[WB ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000007 r 9=000000bd r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    61==============v

[IF ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[ID ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x00000000, rs2: x0 = 0x00000000 → result: 0x00000000
[EX ]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[00001028]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000007 r 9=000000bd r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    62==============v

[IF ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[ID ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[EX DEBUG] Instruction [0x01b48493] → rs1: x9 = 0x000000bd, rs2: x27 = 0x0000001b → result: 0x000000d8
[EX ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[MEM]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000007 r 9=000000bd r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    63==============v

[IF ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[ID ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[EX DEBUG] Instruction [0x00040a63] → rs1: x8 = 0x00000007, rs2: x0 = 0x00000014 → result: 0xfffffff3
[EX ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[MEM]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000007 r 9=000000bd r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    64==============v

[IF ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[ID ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[FWD]: Resolving MEM hazard on rs2: x9
[EX DEBUG] Instruction [0x00990933] → rs1: x18 = 0x0000000e, rs2: x9 = 0x00000000 → result: 0x0000000e
[EX ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[MEM]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[WB ]: Instruction [01b48493]@[00001010] → Writing x9 ← 0x000000d8 (alu_result)
[WB ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000007 r 9=000000d8 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    65==============v

[IF ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[ID ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[EX DEBUG] Instruction [0xfff40413] → rs1: x8 = 0x00000007, rs2: x31 = 0xffffffff → result: 0x00000006
[EX ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[MEM]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[WB ]: Instruction [00040a63]@[00001014] → Writing x0 ← 0xfffffff3 (alu_result)
[WB ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000007 r 9=000000d8 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    66==============v

[IF ]: Instruction [ffc10113]@[00001028]: addi	x2, x2, -4
[ID ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[EX DEBUG] Instruction [0xff1ff06f] → rs1: x31 = 0x00000000, rs2: x17 = 0xfffffff0 → result: 0xfffffff0
[EX ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[MEM]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[WB ]: Instruction [00990933]@[00001018] → Writing x18 ← 0x0000000e (alu_result)
[WB ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000007 r 9=000000d8 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    67==============v

[IF ]: Instruction [01312023]@[0000102c]: sw	x19, 0(x2)
[ID ]: Instruction [ffc10113]@[00001028]: addi	x2, x2, -4
[EX DEBUG] Instruction [0x00100993] → rs1: x0 = 0x00000000, rs2: x1 = 0x00000001 → result: 0x00000001
[EX ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[MEM]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[WB ]: Instruction [fff40413]@[0000101c] → Writing x8 ← 0x00000006 (alu_result)
[WB ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[CPL]: Pipeline Flushed
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000006 r 9=000000d8 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    68==============v

[IF ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[ID ]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x000effff, rs2: x0 = 0xfffffffc → result: 0x000efffb
[EX ]: Instruction [00000013]@[00001028]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[00001024]: addi	x0, x0, 0
[WB ]: Instruction [ff1ff06f]@[00001020] → Writing x0 ← 0x00001024 (alu_result)
[WB ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000006 r 9=000000d8 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    69==============v

[IF ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[ID ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x00000000, rs2: x0 = 0x00000000 → result: 0x00000000
[EX ]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[00001028]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000006 r 9=000000d8 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    70==============v

[IF ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[ID ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[EX DEBUG] Instruction [0x01b48493] → rs1: x9 = 0x000000d8, rs2: x27 = 0x0000001b → result: 0x000000f3
[EX ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[MEM]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000006 r 9=000000d8 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    71==============v

[IF ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[ID ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[EX DEBUG] Instruction [0x00040a63] → rs1: x8 = 0x00000006, rs2: x0 = 0x00000014 → result: 0xfffffff2
[EX ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[MEM]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000006 r 9=000000d8 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    72==============v

[IF ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[ID ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[FWD]: Resolving MEM hazard on rs2: x9
[EX DEBUG] Instruction [0x00990933] → rs1: x18 = 0x0000000e, rs2: x9 = 0x00000000 → result: 0x0000000e
[EX ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[MEM]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[WB ]: Instruction [01b48493]@[00001010] → Writing x9 ← 0x000000f3 (alu_result)
[WB ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000006 r 9=000000f3 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    73==============v

[IF ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[ID ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[EX DEBUG] Instruction [0xfff40413] → rs1: x8 = 0x00000006, rs2: x31 = 0xffffffff → result: 0x00000005
[EX ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[MEM]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[WB ]: Instruction [00040a63]@[00001014] → Writing x0 ← 0xfffffff2 (alu_result)
[WB ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000006 r 9=000000f3 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    74==============v

[IF ]: Instruction [ffc10113]@[00001028]: addi	x2, x2, -4
[ID ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[EX DEBUG] Instruction [0xff1ff06f] → rs1: x31 = 0x00000000, rs2: x17 = 0xfffffff0 → result: 0xfffffff0
[EX ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[MEM]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[WB ]: Instruction [00990933]@[00001018] → Writing x18 ← 0x0000000e (alu_result)
[WB ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000006 r 9=000000f3 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    75==============v

[IF ]: Instruction [01312023]@[0000102c]: sw	x19, 0(x2)
[ID ]: Instruction [ffc10113]@[00001028]: addi	x2, x2, -4
[EX DEBUG] Instruction [0x00100993] → rs1: x0 = 0x00000000, rs2: x1 = 0x00000001 → result: 0x00000001
[EX ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[MEM]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[WB ]: Instruction [fff40413]@[0000101c] → Writing x8 ← 0x00000005 (alu_result)
[WB ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[CPL]: Pipeline Flushed
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000005 r 9=000000f3 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    76==============v

[IF ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[ID ]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x000effff, rs2: x0 = 0xfffffffc → result: 0x000efffb
[EX ]: Instruction [00000013]@[00001028]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[00001024]: addi	x0, x0, 0
[WB ]: Instruction [ff1ff06f]@[00001020] → Writing x0 ← 0x00001024 (alu_result)
[WB ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000005 r 9=000000f3 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    77==============v

[IF ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[ID ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x00000000, rs2: x0 = 0x00000000 → result: 0x00000000
[EX ]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[00001028]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000005 r 9=000000f3 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    78==============v

[IF ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[ID ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[EX DEBUG] Instruction [0x01b48493] → rs1: x9 = 0x000000f3, rs2: x27 = 0x0000001b → result: 0x0000010e
[EX ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[MEM]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000005 r 9=000000f3 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    79==============v

[IF ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[ID ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[EX DEBUG] Instruction [0x00040a63] → rs1: x8 = 0x00000005, rs2: x0 = 0x00000014 → result: 0xfffffff1
[EX ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[MEM]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000005 r 9=000000f3 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    80==============v

[IF ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[ID ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[FWD]: Resolving MEM hazard on rs2: x9
[EX DEBUG] Instruction [0x00990933] → rs1: x18 = 0x0000000e, rs2: x9 = 0x00000000 → result: 0x0000000e
[EX ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[MEM]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[WB ]: Instruction [01b48493]@[00001010] → Writing x9 ← 0x0000010e (alu_result)
[WB ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000005 r 9=0000010e r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    81==============v

[IF ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[ID ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[EX DEBUG] Instruction [0xfff40413] → rs1: x8 = 0x00000005, rs2: x31 = 0xffffffff → result: 0x00000004
[EX ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[MEM]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[WB ]: Instruction [00040a63]@[00001014] → Writing x0 ← 0xfffffff1 (alu_result)
[WB ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000005 r 9=0000010e r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    82==============v

[IF ]: Instruction [ffc10113]@[00001028]: addi	x2, x2, -4
[ID ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[EX DEBUG] Instruction [0xff1ff06f] → rs1: x31 = 0x00000000, rs2: x17 = 0xfffffff0 → result: 0xfffffff0
[EX ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[MEM]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[WB ]: Instruction [00990933]@[00001018] → Writing x18 ← 0x0000000e (alu_result)
[WB ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000005 r 9=0000010e r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    83==============v

[IF ]: Instruction [01312023]@[0000102c]: sw	x19, 0(x2)
[ID ]: Instruction [ffc10113]@[00001028]: addi	x2, x2, -4
[EX DEBUG] Instruction [0x00100993] → rs1: x0 = 0x00000000, rs2: x1 = 0x00000001 → result: 0x00000001
[EX ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[MEM]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[WB ]: Instruction [fff40413]@[0000101c] → Writing x8 ← 0x00000004 (alu_result)
[WB ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[CPL]: Pipeline Flushed
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000004 r 9=0000010e r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    84==============v

[IF ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[ID ]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x000effff, rs2: x0 = 0xfffffffc → result: 0x000efffb
[EX ]: Instruction [00000013]@[00001028]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[00001024]: addi	x0, x0, 0
[WB ]: Instruction [ff1ff06f]@[00001020] → Writing x0 ← 0x00001024 (alu_result)
[WB ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000004 r 9=0000010e r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    85==============v

[IF ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[ID ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x00000000, rs2: x0 = 0x00000000 → result: 0x00000000
[EX ]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[00001028]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000004 r 9=0000010e r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    86==============v

[IF ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[ID ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[EX DEBUG] Instruction [0x01b48493] → rs1: x9 = 0x0000010e, rs2: x27 = 0x0000001b → result: 0x00000129
[EX ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[MEM]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000004 r 9=0000010e r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    87==============v

[IF ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[ID ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[EX DEBUG] Instruction [0x00040a63] → rs1: x8 = 0x00000004, rs2: x0 = 0x00000014 → result: 0xfffffff0
[EX ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[MEM]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000004 r 9=0000010e r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    88==============v

[IF ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[ID ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[FWD]: Resolving MEM hazard on rs2: x9
[EX DEBUG] Instruction [0x00990933] → rs1: x18 = 0x0000000e, rs2: x9 = 0x00000000 → result: 0x0000000e
[EX ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[MEM]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[WB ]: Instruction [01b48493]@[00001010] → Writing x9 ← 0x00000129 (alu_result)
[WB ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000004 r 9=00000129 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    89==============v

[IF ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[ID ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[EX DEBUG] Instruction [0xfff40413] → rs1: x8 = 0x00000004, rs2: x31 = 0xffffffff → result: 0x00000003
[EX ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[MEM]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[WB ]: Instruction [00040a63]@[00001014] → Writing x0 ← 0xfffffff0 (alu_result)
[WB ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000004 r 9=00000129 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    90==============v

[IF ]: Instruction [ffc10113]@[00001028]: addi	x2, x2, -4
[ID ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[EX DEBUG] Instruction [0xff1ff06f] → rs1: x31 = 0x00000000, rs2: x17 = 0xfffffff0 → result: 0xfffffff0
[EX ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[MEM]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[WB ]: Instruction [00990933]@[00001018] → Writing x18 ← 0x0000000e (alu_result)
[WB ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000004 r 9=00000129 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    91==============v

[IF ]: Instruction [01312023]@[0000102c]: sw	x19, 0(x2)
[ID ]: Instruction [ffc10113]@[00001028]: addi	x2, x2, -4
[EX DEBUG] Instruction [0x00100993] → rs1: x0 = 0x00000000, rs2: x1 = 0x00000001 → result: 0x00000001
[EX ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[MEM]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[WB ]: Instruction [fff40413]@[0000101c] → Writing x8 ← 0x00000003 (alu_result)
[WB ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[CPL]: Pipeline Flushed
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000003 r 9=00000129 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    92==============v

[IF ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[ID ]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x000effff, rs2: x0 = 0xfffffffc → result: 0x000efffb
[EX ]: Instruction [00000013]@[00001028]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[00001024]: addi	x0, x0, 0
[WB ]: Instruction [ff1ff06f]@[00001020] → Writing x0 ← 0x00001024 (alu_result)
[WB ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000003 r 9=00000129 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    93==============v

[IF ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[ID ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x00000000, rs2: x0 = 0x00000000 → result: 0x00000000
[EX ]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[00001028]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000003 r 9=00000129 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    94==============v

[IF ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[ID ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[EX DEBUG] Instruction [0x01b48493] → rs1: x9 = 0x00000129, rs2: x27 = 0x0000001b → result: 0x00000144
[EX ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[MEM]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000003 r 9=00000129 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    95==============v

[IF ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[ID ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[EX DEBUG] Instruction [0x00040a63] → rs1: x8 = 0x00000003, rs2: x0 = 0x00000014 → result: 0xffffffef
[EX ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[MEM]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000003 r 9=00000129 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    96==============v

[IF ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[ID ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[FWD]: Resolving MEM hazard on rs2: x9
[EX DEBUG] Instruction [0x00990933] → rs1: x18 = 0x0000000e, rs2: x9 = 0x00000000 → result: 0x0000000e
[EX ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[MEM]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[WB ]: Instruction [01b48493]@[00001010] → Writing x9 ← 0x00000144 (alu_result)
[WB ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000003 r 9=00000144 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    97==============v

[IF ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[ID ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[EX DEBUG] Instruction [0xfff40413] → rs1: x8 = 0x00000003, rs2: x31 = 0xffffffff → result: 0x00000002
[EX ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[MEM]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[WB ]: Instruction [00040a63]@[00001014] → Writing x0 ← 0xffffffef (alu_result)
[WB ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000003 r 9=00000144 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    98==============v

[IF ]: Instruction [ffc10113]@[00001028]: addi	x2, x2, -4
[ID ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[EX DEBUG] Instruction [0xff1ff06f] → rs1: x31 = 0x00000000, rs2: x17 = 0xfffffff0 → result: 0xfffffff0
[EX ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[MEM]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[WB ]: Instruction [00990933]@[00001018] → Writing x18 ← 0x0000000e (alu_result)
[WB ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000003 r 9=00000144 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =    99==============v

[IF ]: Instruction [01312023]@[0000102c]: sw	x19, 0(x2)
[ID ]: Instruction [ffc10113]@[00001028]: addi	x2, x2, -4
[EX DEBUG] Instruction [0x00100993] → rs1: x0 = 0x00000000, rs2: x1 = 0x00000001 → result: 0x00000001
[EX ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[MEM]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[WB ]: Instruction [fff40413]@[0000101c] → Writing x8 ← 0x00000002 (alu_result)
[WB ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[CPL]: Pipeline Flushed
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000002 r 9=00000144 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   100==============v

[IF ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[ID ]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x000effff, rs2: x0 = 0xfffffffc → result: 0x000efffb
[EX ]: Instruction [00000013]@[00001028]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[00001024]: addi	x0, x0, 0
[WB ]: Instruction [ff1ff06f]@[00001020] → Writing x0 ← 0x00001024 (alu_result)
[WB ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000002 r 9=00000144 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   101==============v

[IF ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[ID ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x00000000, rs2: x0 = 0x00000000 → result: 0x00000000
[EX ]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[00001028]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000002 r 9=00000144 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   102==============v

[IF ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[ID ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[EX DEBUG] Instruction [0x01b48493] → rs1: x9 = 0x00000144, rs2: x27 = 0x0000001b → result: 0x0000015f
[EX ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[MEM]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000002 r 9=00000144 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   103==============v

[IF ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[ID ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[EX DEBUG] Instruction [0x00040a63] → rs1: x8 = 0x00000002, rs2: x0 = 0x00000014 → result: 0xffffffee
[EX ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[MEM]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000002 r 9=00000144 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   104==============v

[IF ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[ID ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[FWD]: Resolving MEM hazard on rs2: x9
[EX DEBUG] Instruction [0x00990933] → rs1: x18 = 0x0000000e, rs2: x9 = 0x00000000 → result: 0x0000000e
[EX ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[MEM]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[WB ]: Instruction [01b48493]@[00001010] → Writing x9 ← 0x0000015f (alu_result)
[WB ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000002 r 9=0000015f r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   105==============v

[IF ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[ID ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[EX DEBUG] Instruction [0xfff40413] → rs1: x8 = 0x00000002, rs2: x31 = 0xffffffff → result: 0x00000001
[EX ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[MEM]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[WB ]: Instruction [00040a63]@[00001014] → Writing x0 ← 0xffffffee (alu_result)
[WB ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000002 r 9=0000015f r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   106==============v

[IF ]: Instruction [ffc10113]@[00001028]: addi	x2, x2, -4
[ID ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[EX DEBUG] Instruction [0xff1ff06f] → rs1: x31 = 0x00000000, rs2: x17 = 0xfffffff0 → result: 0xfffffff0
[EX ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[MEM]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[WB ]: Instruction [00990933]@[00001018] → Writing x18 ← 0x0000000e (alu_result)
[WB ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000002 r 9=0000015f r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   107==============v

[IF ]: Instruction [01312023]@[0000102c]: sw	x19, 0(x2)
[ID ]: Instruction [ffc10113]@[00001028]: addi	x2, x2, -4
[EX DEBUG] Instruction [0x00100993] → rs1: x0 = 0x00000000, rs2: x1 = 0x00000001 → result: 0x00000001
[EX ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[MEM]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[WB ]: Instruction [fff40413]@[0000101c] → Writing x8 ← 0x00000001 (alu_result)
[WB ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[CPL]: Pipeline Flushed
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000001 r 9=0000015f r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   108==============v

[IF ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[ID ]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x000effff, rs2: x0 = 0xfffffffc → result: 0x000efffb
[EX ]: Instruction [00000013]@[00001028]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[00001024]: addi	x0, x0, 0
[WB ]: Instruction [ff1ff06f]@[00001020] → Writing x0 ← 0x00001024 (alu_result)
[WB ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000001 r 9=0000015f r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   109==============v

[IF ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[ID ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x00000000, rs2: x0 = 0x00000000 → result: 0x00000000
[EX ]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[00001028]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000001 r 9=0000015f r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   110==============v

[IF ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[ID ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[EX DEBUG] Instruction [0x01b48493] → rs1: x9 = 0x0000015f, rs2: x27 = 0x0000001b → result: 0x0000017a
[EX ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[MEM]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000001 r 9=0000015f r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   111==============v

[IF ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[ID ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[EX DEBUG] Instruction [0x00040a63] → rs1: x8 = 0x00000001, rs2: x0 = 0x00000014 → result: 0xffffffed
[EX ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[MEM]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000001 r 9=0000015f r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   112==============v

[IF ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[ID ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[FWD]: Resolving MEM hazard on rs2: x9
[EX DEBUG] Instruction [0x00990933] → rs1: x18 = 0x0000000e, rs2: x9 = 0x00000000 → result: 0x0000000e
[EX ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[MEM]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[WB ]: Instruction [01b48493]@[00001010] → Writing x9 ← 0x0000017a (alu_result)
[WB ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000001 r 9=0000017a r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   113==============v

[IF ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[ID ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[EX DEBUG] Instruction [0xfff40413] → rs1: x8 = 0x00000001, rs2: x31 = 0xffffffff → result: 0x00000000
[EX ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[MEM]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[WB ]: Instruction [00040a63]@[00001014] → Writing x0 ← 0xffffffed (alu_result)
[WB ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000001 r 9=0000017a r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   114==============v

[IF ]: Instruction [ffc10113]@[00001028]: addi	x2, x2, -4
[ID ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[EX DEBUG] Instruction [0xff1ff06f] → rs1: x31 = 0x00000000, rs2: x17 = 0xfffffff0 → result: 0xfffffff0
[EX ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[MEM]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[WB ]: Instruction [00990933]@[00001018] → Writing x18 ← 0x0000000e (alu_result)
[WB ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000001 r 9=0000017a r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   115==============v

[IF ]: Instruction [01312023]@[0000102c]: sw	x19, 0(x2)
[ID ]: Instruction [ffc10113]@[00001028]: addi	x2, x2, -4
[EX DEBUG] Instruction [0x00100993] → rs1: x0 = 0x00000000, rs2: x1 = 0x00000001 → result: 0x00000001
[EX ]: Instruction [00100993]@[00001024]: addi	x19, x0, 1
[MEM]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[WB ]: Instruction [fff40413]@[0000101c] → Writing x8 ← 0x00000000 (alu_result)
[WB ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[CPL]: Pipeline Flushed
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=0000017a r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   116==============v

[IF ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[ID ]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x000effff, rs2: x0 = 0xfffffffc → result: 0x000efffb
[EX ]: Instruction [00000013]@[00001028]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[00001024]: addi	x0, x0, 0
[WB ]: Instruction [ff1ff06f]@[00001020] → Writing x0 ← 0x00001024 (alu_result)
[WB ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=0000017a r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   117==============v

[IF ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[ID ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x00000000, rs2: x0 = 0x00000000 → result: 0x00000000
[EX ]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[00001028]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=0000017a r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   118==============v

[IF ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[ID ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[EX DEBUG] Instruction [0x01b48493] → rs1: x9 = 0x0000017a, rs2: x27 = 0x0000001b → result: 0x00000195
[EX ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[MEM]: Instruction [00000013]@[0000102c]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=0000017a r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   119==============v

[IF ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[ID ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[EX DEBUG] Instruction [0x00040a63] → rs1: x8 = 0x00000000, rs2: x0 = 0x00000014 → result: 0xffffffec
[EX ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[MEM]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=0000017a r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   120==============v

[IF ]: Instruction [ff1ff06f]@[00001020]: jal	x0, -16
[ID ]: Instruction [fff40413]@[0000101c]: addi	x8, x8, -1
[FWD]: Resolving MEM hazard on rs2: x9
[EX DEBUG] Instruction [0x00990933] → rs1: x18 = 0x0000000e, rs2: x9 = 0x00000000 → result: 0x0000000e
[EX ]: Instruction [00990933]@[00001018]: add	x18, x18, x9
[MEM]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
[WB ]: Instruction [01b48493]@[00001010] → Writing x9 ← 0x00000195 (alu_result)
[WB ]: Instruction [01b48493]@[00001010]: addi	x9, x9, 27
[CPL]: Pipeline Flushed
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=00000195 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   121==============v

[IF ]: Instruction [ffc10113]@[00001028]: addi	x2, x2, -4
[ID ]: Instruction [00000013]@[00001020]: addi	x0, x0, 0
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x00000000, rs2: x0 = 0xffffffff → result: 0xffffffff
[EX ]: Instruction [00000013]@[0000101c]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[00001018]: addi	x0, x0, 0
[WB ]: Instruction [00040a63]@[00001014] → Writing x0 ← 0xffffffec (alu_result)
[WB ]: Instruction [00040a63]@[00001014]: beq	x8, x0, 20
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=00000195 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   122==============v

[IF ]: Instruction [01312023]@[0000102c]: sw	x19, 0(x2)
[ID ]: Instruction [ffc10113]@[00001028]: addi	x2, x2, -4
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x00000000, rs2: x0 = 0x00000000 → result: 0x00000000
[EX ]: Instruction [00000013]@[00001020]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[0000101c]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=00000195 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   123==============v

[IF ]: Instruction [0139c9b3]@[00001030]: xor	x19, x19, x19
[ID ]: Instruction [01312023]@[0000102c]: sw	x19, 0(x2)
[EX DEBUG] Instruction [0xffc10113] → rs1: x2 = 0x000effff, rs2: x28 = 0xfffffffc → result: 0x000efffb
[EX ]: Instruction [ffc10113]@[00001028]: addi	x2, x2, -4
[MEM]: Instruction [00000013]@[00001020]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=00000195 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   124==============v

[IF ]: Instruction [02099263]@[00001034]: bne	x19, x0, 36
[ID ]: Instruction [0139c9b3]@[00001030]: xor	x19, x19, x19
[FWD]: Resolving EX hazard on rs1: x2
[EX DEBUG] Instruction [0x01312023] → rs1: x2 = 0x000efffb, rs2: x19 = 0x00000000 → result: 0x000efffb
[EX ]: Instruction [01312023]@[0000102c]: sw	x19, 0(x2)
[MEM]: Instruction [ffc10113]@[00001028]: addi	x2, x2, -4
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=00000195 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   125==============v

[IF ]: Instruction [00012983]@[00001038]: lw	x19, 0(x2)
[ID ]: Instruction [02099263]@[00001034]: bne	x19, x0, 36
[EX DEBUG] Instruction [0x0139c9b3] → rs1: x19 = 0x00000000, rs2: x19 = 0x00000000 → result: 0x00000000
[EX ]: Instruction [0139c9b3]@[00001030]: xor	x19, x19, x19
[MEM]: Instruction [01312023]@[0000102c]: sw	x19, 0(x2)
[WB ]: Instruction [ffc10113]@[00001028] → Writing x2 ← 0x000efffb (alu_result)
[WB ]: Instruction [ffc10113]@[00001028]: addi	x2, x2, -4
r 0=00000000 r 1=00000000 r 2=000efffb r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=00000195 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   126==============v

[IF ]: Instruction [00410113]@[0000103c]: addi	x2, x2, 4
[ID ]: Instruction [00012983]@[00001038]: lw	x19, 0(x2)
[FWD]: Resolving EX hazard on rs1: x19
[EX DEBUG] Instruction [0x02099263] → rs1: x19 = 0x00000000, rs2: x0 = 0x00000024 → result: 0xffffffdc
[EX ]: Instruction [02099263]@[00001034]: bne	x19, x0, 36
[MEM]: Instruction [0139c9b3]@[00001030]: xor	x19, x19, x19
[WB ]: Instruction [01312023]@[0000102c] → Writing x0 ← 0x000efffb (alu_result)
[WB ]: Instruction [01312023]@[0000102c]: sw	x19, 0(x2)
r 0=00000000 r 1=00000000 r 2=000efffb r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=00000195 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   127==============v

[IF ]: Instruction [01300533]@[00001040]: add	x10, x0, x19
[ID ]: Instruction [00410113]@[0000103c]: addi	x2, x2, 4
[EX DEBUG] Instruction [0x00012983] → rs1: x2 = 0x000efffb, rs2: x0 = 0x00000000 → result: 0x000efffb
[EX ]: Instruction [00012983]@[00001038]: lw	x19, 0(x2)
[MEM]: Instruction [02099263]@[00001034]: bne	x19, x0, 36
[WB ]: Instruction [0139c9b3]@[00001030] → Writing x19 ← 0x00000000 (alu_result)
[WB ]: Instruction [0139c9b3]@[00001030]: xor	x19, x19, x19
r 0=00000000 r 1=00000000 r 2=000efffb r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=00000195 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   128==============v

[IF ]: Instruction [000005b3]@[00001044]: add	x11, x0, x0
[ID ]: Instruction [01300533]@[00001040]: add	x10, x0, x19
[EX DEBUG] Instruction [0x00410113] → rs1: x2 = 0x000efffb, rs2: x4 = 0x00000004 → result: 0x000effff
[EX ]: Instruction [00410113]@[0000103c]: addi	x2, x2, 4
[MEM]: Instruction [00012983]@[00001038]: lw	x19, 0(x2)
[WB ]: Instruction [02099263]@[00001034] → Writing x0 ← 0xffffffdc (alu_result)
[WB ]: Instruction [02099263]@[00001034]: bne	x19, x0, 36
r 0=00000000 r 1=00000000 r 2=000efffb r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=00000195 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   129==============v

[IF ]: Instruction [012065b3]@[00001048]: or	x11, x0, x18
[ID ]: Instruction [000005b3]@[00001044]: add	x11, x0, x0
[FWD]: Resolving MEM hazard on rs2: x19
[EX DEBUG] Instruction [0x01300533] → rs1: x0 = 0x00000000, rs2: x19 = 0xffffffdc → result: 0xffffffdc
[EX ]: Instruction [01300533]@[00001040]: add	x10, x0, x19
[MEM]: Instruction [00410113]@[0000103c]: addi	x2, x2, 4
[WB ]: Instruction [00012983]@[00001038] → Writing x19 ← 0x00000000 (mem_data)
[WB ]: Instruction [00012983]@[00001038]: lw	x19, 0(x2)
r 0=00000000 r 1=00000000 r 2=000efffb r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=00000195 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   130==============v

[IF ]: Instruction [00000073]@[0000104c]: ecall
[ID ]: Instruction [012065b3]@[00001048]: or	x11, x0, x18
[EX DEBUG] Instruction [0x000005b3] → rs1: x0 = 0x00000000, rs2: x0 = 0x00000000 → result: 0x00000000
[EX ]: Instruction [000005b3]@[00001044]: add	x11, x0, x0
[MEM]: Instruction [01300533]@[00001040]: add	x10, x0, x19
[WB ]: Instruction [00410113]@[0000103c] → Writing x2 ← 0x000effff (alu_result)
[WB ]: Instruction [00410113]@[0000103c]: addi	x2, x2, 4
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=00000195 r10=00000000 r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   131==============v

[IF ]: Instruction [0080006f]@[00001050]: jal	x0, 8
[ID ]: Instruction [00000073]@[0000104c]: ecall
[EX DEBUG] Instruction [0x012065b3] → rs1: x0 = 0x00000000, rs2: x18 = 0x0000000e → result: 0x0000000e
[EX ]: Instruction [012065b3]@[00001048]: or	x11, x0, x18
[MEM]: Instruction [000005b3]@[00001044]: add	x11, x0, x0
[WB ]: Instruction [01300533]@[00001040] → Writing x10 ← 0xffffffdc (alu_result)
[WB ]: Instruction [01300533]@[00001040]: add	x10, x0, x19
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=00000195 r10=ffffffdc r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   132==============v

[IF ]: Instruction [03297513]@[00001054]: andi	x10, x18, 50
[ID ]: Instruction [0080006f]@[00001050]: jal	x0, 8
[EX DEBUG] Instruction [0x00000073] → rs1: x0 = 0x00000000, rs2: x0 = 0x00000000 → result: 0x00000000
[EX ]: Instruction [00000073]@[0000104c]: ecall
[MEM]: Instruction [012065b3]@[00001048]: or	x11, x0, x18
[WB ]: Instruction [000005b3]@[00001044] → Writing x11 ← 0x00000000 (alu_result)
[WB ]: Instruction [000005b3]@[00001044]: add	x11, x0, x0
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=00000195 r10=ffffffdc r11=00000000 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   133==============v

[IF ]: Instruction [00a00513]@[00001058]: addi	x10, x0, 10
[ID ]: Instruction [03297513]@[00001054]: andi	x10, x18, 50
[EX DEBUG] Instruction [0x0080006f] → rs1: x0 = 0x00000000, rs2: x8 = 0x00000008 → result: 0x00000008
[EX ]: Instruction [0080006f]@[00001050]: jal	x0, 8
[MEM]: Instruction [00000073]@[0000104c]: ecall
[WB ]: Instruction [012065b3]@[00001048] → Writing x11 ← 0x0000000e (alu_result)
[WB ]: Instruction [012065b3]@[00001048]: or	x11, x0, x18
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=00000195 r10=ffffffdc r11=0000000e 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   134==============v

[IF ]: Instruction [00000073]@[0000105c]: ecall
[ID ]: Instruction [00a00513]@[00001058]: addi	x10, x0, 10
[EX DEBUG] Instruction [0x03297513] → rs1: x18 = 0x0000000e, rs2: x18 = 0x00000032 → result: 0x00000002
[EX ]: Instruction [03297513]@[00001054]: andi	x10, x18, 50
[MEM]: Instruction [0080006f]@[00001050]: jal	x0, 8
[WB ]: Instruction [00000073]@[0000104c] → Writing x0 ← 0x00000000 (alu_result)
[WB ]: Instruction [00000073]@[0000104c]: ecall
[CPL]: Pipeline Flushed
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=00000195 r10=ffffffdc r11=0000000e 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   135==============v

[IF ]: Instruction [00a00513]@[00001058]: addi	x10, x0, 10
[ID ]: Instruction [00000013]@[0000105c]: addi	x0, x0, 0
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x00000000, rs2: x0 = 0x0000000a → result: 0x0000000a
[EX ]: Instruction [00000013]@[00001058]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[00001054]: addi	x0, x0, 0
[WB ]: Instruction [0080006f]@[00001050] → Writing x0 ← 0x00001054 (alu_result)
[WB ]: Instruction [0080006f]@[00001050]: jal	x0, 8
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=00000195 r10=ffffffdc r11=0000000e 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   136==============v

[IF ]: Instruction [00000073]@[0000105c]: ecall
[ID ]: Instruction [00a00513]@[00001058]: addi	x10, x0, 10
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x00000000, rs2: x0 = 0x00000000 → result: 0x00000000
[EX ]: Instruction [00000013]@[0000105c]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[00001058]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=00000195 r10=ffffffdc r11=0000000e 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   137==============v

[IF ]: Instruction [00000013]@[00001060]: addi	x0, x0, 0
[ID ]: Instruction [00000073]@[0000105c]: ecall
[EX DEBUG] Instruction [0x00a00513] → rs1: x0 = 0x00000000, rs2: x10 = 0x0000000a → result: 0x0000000a
[EX ]: Instruction [00a00513]@[00001058]: addi	x10, x0, 10
[MEM]: Instruction [00000013]@[0000105c]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=00000195 r10=ffffffdc r11=0000000e 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   138==============v

[IF ]: Instruction [00000013]@[00001064]: addi	x0, x0, 0
[ID ]: Instruction [00000013]@[00001060]: addi	x0, x0, 0
[EX DEBUG] Instruction [0x00000073] → rs1: x0 = 0x00000000, rs2: x0 = 0x00000000 → result: 0x00000000
[EX ]: Instruction [00000073]@[0000105c]: ecall
[MEM]: Instruction [00a00513]@[00001058]: addi	x10, x0, 10
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=00000195 r10=ffffffdc r11=0000000e 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   139==============v

[IF ]: Instruction [00000013]@[00001068]: addi	x0, x0, 0
[ID ]: Instruction [00000013]@[00001064]: addi	x0, x0, 0
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x00000000, rs2: x0 = 0x00000000 → result: 0x00000000
[EX ]: Instruction [00000013]@[00001060]: addi	x0, x0, 0
[MEM]: Instruction [00000073]@[0000105c]: ecall
[WB ]: Instruction [00a00513]@[00001058] → Writing x10 ← 0x0000000a (alu_result)
[WB ]: Instruction [00a00513]@[00001058]: addi	x10, x0, 10
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=00000195 r10=0000000a r11=0000000e 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 


========
[MAIN]: Flushing pipeline
========
v==============Cycle Counter =   140==============v

[IF ]: Instruction [00000013]@[0000106c]: addi	x0, x0, 0
[ID ]: Instruction [00000013]@[00001068]: addi	x0, x0, 0
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x00000000, rs2: x0 = 0x00000000 → result: 0x00000000
[EX ]: Instruction [00000013]@[00001064]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[00001060]: addi	x0, x0, 0
[WB ]: Instruction [00000073]@[0000105c] → Writing x0 ← 0x00000000 (alu_result)
[WB ]: Instruction [00000073]@[0000105c]: ecall
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=00000195 r10=0000000a r11=0000000e 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   141==============v

[IF ]: Instruction [00000013]@[00001070]: addi	x0, x0, 0
[ID ]: Instruction [00000013]@[0000106c]: addi	x0, x0, 0
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x00000000, rs2: x0 = 0x00000000 → result: 0x00000000
[EX ]: Instruction [00000013]@[00001068]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[00001064]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=00000195 r10=0000000a r11=0000000e 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   142==============v

[IF ]: Instruction [00000013]@[00001074]: addi	x0, x0, 0
[ID ]: Instruction [00000013]@[00001070]: addi	x0, x0, 0
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x00000000, rs2: x0 = 0x00000000 → result: 0x00000000
[EX ]: Instruction [00000013]@[0000106c]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[00001068]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=00000195 r10=0000000a r11=0000000e 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   143==============v

[IF ]: Instruction [00000013]@[00001078]: addi	x0, x0, 0
[ID ]: Instruction [00000013]@[00001074]: addi	x0, x0, 0
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x00000000, rs2: x0 = 0x00000000 → result: 0x00000000
[EX ]: Instruction [00000013]@[00001070]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[0000106c]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=00000195 r10=0000000a r11=0000000e 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

v==============Cycle Counter =   144==============v

[IF ]: Instruction [00000013]@[0000107c]: addi	x0, x0, 0
[ID ]: Instruction [00000013]@[00001078]: addi	x0, x0, 0
[EX DEBUG] Instruction [0x00000013] → rs1: x0 = 0x00000000, rs2: x0 = 0x00000000 → result: 0x00000000
[EX ]: Instruction [00000013]@[00001074]: addi	x0, x0, 0
[MEM]: Instruction [00000013]@[00001070]: addi	x0, x0, 0
[WB ]: Instruction is NOP, skipping writeback
r 0=00000000 r 1=00000000 r 2=000effff r 3=00003000 
r 4=00000000 r 5=00000000 r 6=00000000 r 7=00000000 
r 8=00000000 r 9=00000195 r10=0000000a r11=0000000e 
r12=00000000 r13=00000000 r14=00000000 r15=00000000 
r16=00000000 r17=00000000 r18=0000000e r19=00000000 
r20=00000000 r21=00000000 r22=00000000 r23=00000000 
r24=00000000 r25=00000000 r26=00000000 r27=00000000 
r28=00000000 r29=00000000 r30=00000000 r31=00000000 

#Cycles            =   145
#Forwards (EX-EX)  =     2
#Forwards (EX-MEM) =    17
#Branches taken    =     0
#Stalls            =     0
